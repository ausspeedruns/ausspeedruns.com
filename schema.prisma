// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Post {
  id            String        @id @default(cuid())
  title         String        @default("")
  slug          String        @unique @default("")
  author        User[]        @relation("Post_author")
  published     Boolean       @default(false)
  publishedDate DateTime?
  editedDate    DateTime?
  role          PostRoleType?
  content       Json          @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  intro         String        @default("")
}

model User {
  id                      String         @id @default(cuid())
  name                    String         @default("")
  username                String         @unique @default("")
  email                   String         @unique @default("")
  password                String
  accountCreated          DateTime?      @default(now())
  dateOfBirth             DateTime?
  pronouns                String         @default("")
  socials                 Social?        @relation("Social_user")
  submissions             Submission[]   @relation("Submission_runner")
  roles                   Role[]         @relation("Role_users")
  runs                    Run[]          @relation("Run_runners")
  verified                Boolean        @default(false)
  state                   UserStateType? @default(none)
  sentVerification        DateTime?
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
  from_Post_author        Post[]         @relation("Post_author")
}

model Submission {
  id                          String                   @id @default(cuid())
  runner                      User?                    @relation("Submission_runner", fields: [runnerId], references: [id])
  runnerId                    String?                  @map("runner")
  created                     DateTime?                @default(now())
  game                        String                   @default("")
  category                    String                   @default("")
  platform                    String                   @default("")
  estimate                    String                   @default("")
  ageRating                   SubmissionAgeRatingType? @default(m_or_lower)
  donationIncentive           String                   @default("")
  specialReqs                 String                   @default("")
  availability                Json?                    @map("availability_json")
  race                        SubmissionRaceType?      @default(no)
  racer                       String                   @default("")
  coop                        Boolean                  @default(false)
  video                       String                   @default("")
  status                      SubmissionStatusType?    @default(submitted)
  event                       Event?                   @relation("Submission_event", fields: [eventId], references: [id])
  eventId                     String?                  @map("event")
  from_Run_originalSubmission Run[]                    @relation("Run_originalSubmission")

  @@index([runnerId])
  @@index([eventId])
}

model Event {
  id                     String       @id @default(cuid())
  name                   String       @default("")
  shortname              String       @unique @default("")
  startDate              DateTime?
  endDate                DateTime?
  raised                 Float?
  submissions            Submission[] @relation("Submission_event")
  runs                   Run[]        @relation("Run_event")
  acceptingSubmissions   Boolean      @default(false)
  logo_filesize          Int?
  logo_extension         String?
  logo_width             Int?
  logo_height            Int?
  logo_id                String?
  pressKit_filename      String?
  pressKit_filesize      Int?
  submissionInstructions String       @default("")
  from_Role_event        Role[]       @relation("Role_event")
}

model Role {
  id                String              @id @default(cuid())
  name              String              @default("")
  admin             Boolean             @default(false)
  canManageContent  Boolean             @default(false)
  canManageUsers    Boolean             @default(false)
  canReadTech       Boolean             @default(false)
  canReadRunnerInfo Boolean             @default(false)
  canReadRunnerMgmt Boolean             @default(false)
  users             User[]              @relation("Role_users")
  event             Event?              @relation("Role_event", fields: [eventId], references: [id])
  eventId           String?             @map("event")
  show              Boolean             @default(false)
  colour            String              @default("#ffffff")
  textColour        RoleTextColourType?

  @@index([eventId])
}

model Social {
  id      String  @id @default(cuid())
  discord String  @default("")
  twitter String  @default("")
  twitch  String  @default("")
  user    User?   @relation("Social_user", fields: [userId], references: [id])
  userId  String? @unique @map("user")
}

model Run {
  id                   String      @id @default(cuid())
  runners              User[]      @relation("Run_runners")
  originalSubmission   Submission? @relation("Run_originalSubmission", fields: [originalSubmissionId], references: [id])
  originalSubmissionId String?     @map("originalSubmission")
  game                 String      @default("")
  category             String      @default("")
  platform             String      @default("")
  estimate             String      @default("")
  finalTime            String      @default("")
  donationIncentive    String      @default("")
  race                 Boolean     @default(false)
  racer                String      @default("")
  coop                 Boolean     @default(false)
  twitchVOD            String      @default("")
  youtubeVOD           String      @default("")
  event                Event?      @relation("Run_event", fields: [eventId], references: [id])
  eventId              String?     @map("event")
  scheduledTime        DateTime?

  @@index([originalSubmissionId])
  @@index([eventId])
}

model Verification {
  id      String @id @default(cuid())
  code    String @unique @default("")
  account String @default("")
}

enum PostRoleType {
  public
  runner
  tech
  runner_management
}

enum UserStateType {
  none
  vic
  nsw
  qld
  sa
  wa
  act
  nt
  tas
  outer
}

enum SubmissionAgeRatingType {
  m_or_lower
  ma15
  ra18
}

enum SubmissionRaceType {
  no
  solo
  only
}

enum SubmissionStatusType {
  submitted
  accepted
  backup
  rejected
}

enum RoleTextColourType {
  white
  black
}